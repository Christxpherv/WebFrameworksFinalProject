<%# dropdown menu that allows user to select the attribute to sort by %>
<select id="sortAttribute">
  <option value="price">Price</option>
  <option value="name">Name</option>
  <option value="quantity">Quantity</option>
</select>

<%# button to sort the products by the selected attribute %>
<button id="sortButton">Sort</button>

<%# create a table of the products and its categories, like an actual database  %>
<table class="products-table">
  <thead>
    <tr>
      <%# categories %>
      <th class="sortable">Name</th>
      <th class="sortable">Price</th>
      <th class="sortable">Quantity</th>
    </tr>
  </thead>
  <tbody>
   <%# iterate through the data in products and get its attributes to create a row %>
    <% @products.each do |product| %>
      <tr>
        <td><%= product.name %></td>
        <td><%= product.price %></td>
        <td><%= product.quantity %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
  $(document).ready(function() {
    $('#sortButton').on('click', function() {
      // get the selected attribute from the dropdown by using its id
      const attribute = $('#sortAttribute').val();
      
      // get the table using its class
      const table = $('.products-table');
      // get all the rows in the table body
      const rows = table.find('tbody > tr').get();

      // sort the rows based on the selected attribute where a and b are the rows
      rows.sort((a, b) => {
        // get the value of the attribute for the current row
        const aValue = $(a).find('td').eq(getColumnIndex(attribute)).text();
        const bValue = $(b).find('td').eq(getColumnIndex(attribute)).text();

        // sort alphabetically for string attributes
        return isNaN(aValue) ? aValue.localeCompare(bValue)

      // empty the tbody and append the sorted rows
      table.find('tbody').empty().append(rows);
    });
  });
</script>